name: Deploy to AWS EC2 and S3 with Terraform

on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      # Checkout repo
      - name: Checkout repository
        uses: actions/checkout@v3

      # Setup Terraform & deploy infra
      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Terraform Init
        working-directory: infra
        run: terraform init

      - name: Terraform Apply
        working-directory: infra
        env:
          EC2_SSH_KEY: ${{ secrets.EC2_SSH_KEY }}
          GHCR_PAT: ${{ secrets.GHCR_PAT }}
          S3_BUCKET_NAME: ${{ secrets.S3_BUCKET_NAME }}
        run: terraform apply -auto-approve \
          -var="ec2_ssh_key=${EC2_SSH_KEY}" \
          -var="ghcr_pat=${GHCR_PAT}" \
          -var="s3_bucket_name=${S3_BUCKET_NAME}"

      # Install Ansible
      - name: Install Ansible
        run: sudo apt-get update && sudo apt-get install -y ansible python3-pip

      # Run Ansible Playbook
      - name: Run Ansible Playbook
        env:
          ANSIBLE_HOST_KEY_CHECKING: "False"
          GHCR_PAT: ${{ secrets.GHCR_PAT }}
        run: |
          # Get EC2 IP from Terraform output
          EC2_IP=$(terraform -chdir=infra output -raw ec2_public_ip)

          # Write inventory file
          echo "[ec2]" > inventory.ini
          echo "$EC2_IP ansible_user=ubuntu ansible_ssh_private_key_file=./ec2_key.pem" >> inventory.ini

          # Save private key from secret
          echo "${{ secrets.EC2_PRIVATE_KEY }}" > ec2_key.pem
          chmod 600 ec2_key.pem

          # Run playbook
          ansible-playbook -i inventory.ini ansible/playbook.yml
